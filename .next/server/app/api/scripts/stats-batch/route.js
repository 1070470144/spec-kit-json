/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/scripts/stats-batch/route";
exports.ids = ["app/api/scripts/stats-batch/route"];
exports.modules = {

/***/ "(rsc)/./app/api/scripts/stats-batch/route.ts":
/*!**********************************************!*\
  !*** ./app/api/scripts/stats-batch/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _src_db_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/src/db/client */ \"(rsc)/./src/db/client.ts\");\n/* harmony import */ var _src_api_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/api/http */ \"(rsc)/./src/api/http.ts\");\n/* harmony import */ var _src_auth_session__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/src/auth/session */ \"(rsc)/./src/auth/session.ts\");\n\n\n\nasync function POST(req) {\n    const body = await req.json().catch(()=>null);\n    const ids = Array.from(new Set((body?.ids || []).filter((id)=>typeof id === 'string' && id.length > 0)));\n    if (!ids.length) return (0,_src_api_http__WEBPACK_IMPORTED_MODULE_1__.badRequest)('EMPTY_IDS');\n    // counts by group\n    const [likeGroups, favGroups] = await Promise.all([\n        _src_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.like.groupBy({\n            by: [\n                'scriptId'\n            ],\n            where: {\n                scriptId: {\n                    in: ids\n                }\n            },\n            _count: {\n                scriptId: true\n            }\n        }),\n        _src_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.favorite.groupBy({\n            by: [\n                'scriptId'\n            ],\n            where: {\n                scriptId: {\n                    in: ids\n                }\n            },\n            _count: {\n                scriptId: true\n            }\n        })\n    ]);\n    const likeCountMap = new Map(likeGroups.map((g)=>[\n            g.scriptId,\n            g._count.scriptId\n        ]));\n    const favCountMap = new Map(favGroups.map((g)=>[\n            g.scriptId,\n            g._count.scriptId\n        ]));\n    const s = await (0,_src_auth_session__WEBPACK_IMPORTED_MODULE_2__.getSession)();\n    let likedSet = new Set(), favoritedSet = new Set();\n    if (s) {\n        const [liked, favorited] = await Promise.all([\n            _src_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.like.findMany({\n                where: {\n                    userId: s.userId,\n                    scriptId: {\n                        in: ids\n                    }\n                },\n                select: {\n                    scriptId: true\n                }\n            }),\n            _src_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.favorite.findMany({\n                where: {\n                    userId: s.userId,\n                    scriptId: {\n                        in: ids\n                    }\n                },\n                select: {\n                    scriptId: true\n                }\n            })\n        ]);\n        likedSet = new Set(liked.map((x)=>x.scriptId));\n        favoritedSet = new Set(favorited.map((x)=>x.scriptId));\n    }\n    const result = {};\n    for (const id of ids){\n        result[id] = {\n            likes: likeCountMap.get(id) || 0,\n            favorites: favCountMap.get(id) || 0,\n            liked: likedSet.has(id),\n            favorited: favoritedSet.has(id)\n        };\n    }\n    return (0,_src_api_http__WEBPACK_IMPORTED_MODULE_1__.ok)({\n        items: result\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NjcmlwdHMvc3RhdHMtYmF0Y2gvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNPO0FBQ0E7QUFJeEMsZUFBZUksS0FBS0MsR0FBWTtJQUNyQyxNQUFNQyxPQUFRLE1BQU1ELElBQUlFLElBQUksR0FBR0MsS0FBSyxDQUFDLElBQU07SUFDM0MsTUFBTUMsTUFBTUMsTUFBTUMsSUFBSSxDQUFDLElBQUlDLElBQUksQ0FBQ04sTUFBTUcsT0FBTyxFQUFFLEVBQUVJLE1BQU0sQ0FBQ0MsQ0FBQUEsS0FBTSxPQUFPQSxPQUFPLFlBQVlBLEdBQUdDLE1BQU0sR0FBRztJQUNwRyxJQUFJLENBQUNOLElBQUlNLE1BQU0sRUFBRSxPQUFPYix5REFBVUEsQ0FBQztJQUVuQyxrQkFBa0I7SUFDbEIsTUFBTSxDQUFDYyxZQUFZQyxVQUFVLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1FBQ2hEbkIsa0RBQU1BLENBQUNvQixJQUFJLENBQUNDLE9BQU8sQ0FBQztZQUFFQyxJQUFJO2dCQUFDO2FBQVc7WUFBRUMsT0FBTztnQkFBRUMsVUFBVTtvQkFBRUMsSUFBSWhCO2dCQUFJO1lBQUU7WUFBR2lCLFFBQVE7Z0JBQUVGLFVBQVU7WUFBSztRQUFFO1FBQ3JHeEIsa0RBQU1BLENBQUMyQixRQUFRLENBQUNOLE9BQU8sQ0FBQztZQUFFQyxJQUFJO2dCQUFDO2FBQVc7WUFBRUMsT0FBTztnQkFBRUMsVUFBVTtvQkFBRUMsSUFBSWhCO2dCQUFJO1lBQUU7WUFBR2lCLFFBQVE7Z0JBQUVGLFVBQVU7WUFBSztRQUFFO0tBQzFHO0lBQ0QsTUFBTUksZUFBZSxJQUFJQyxJQUFvQmIsV0FBV2MsR0FBRyxDQUFDQyxDQUFBQSxJQUFLO1lBQUNBLEVBQUVQLFFBQVE7WUFBRU8sRUFBRUwsTUFBTSxDQUFDRixRQUFRO1NBQUM7SUFDaEcsTUFBTVEsY0FBYyxJQUFJSCxJQUFvQlosVUFBVWEsR0FBRyxDQUFDQyxDQUFBQSxJQUFLO1lBQUNBLEVBQUVQLFFBQVE7WUFBRU8sRUFBRUwsTUFBTSxDQUFDRixRQUFRO1NBQUM7SUFFOUYsTUFBTVMsSUFBSSxNQUFNOUIsNkRBQVVBO0lBQzFCLElBQUkrQixXQUFXLElBQUl0QixPQUFldUIsZUFBZSxJQUFJdkI7SUFDckQsSUFBSXFCLEdBQUc7UUFDTCxNQUFNLENBQUNHLE9BQU9DLFVBQVUsR0FBRyxNQUFNbkIsUUFBUUMsR0FBRyxDQUFDO1lBQzNDbkIsa0RBQU1BLENBQUNvQixJQUFJLENBQUNrQixRQUFRLENBQUM7Z0JBQUVmLE9BQU87b0JBQUVnQixRQUFRTixFQUFFTSxNQUFNO29CQUFFZixVQUFVO3dCQUFFQyxJQUFJaEI7b0JBQUk7Z0JBQUU7Z0JBQUcrQixRQUFRO29CQUFFaEIsVUFBVTtnQkFBSztZQUFFO1lBQ3RHeEIsa0RBQU1BLENBQUMyQixRQUFRLENBQUNXLFFBQVEsQ0FBQztnQkFBRWYsT0FBTztvQkFBRWdCLFFBQVFOLEVBQUVNLE1BQU07b0JBQUVmLFVBQVU7d0JBQUVDLElBQUloQjtvQkFBSTtnQkFBRTtnQkFBRytCLFFBQVE7b0JBQUVoQixVQUFVO2dCQUFLO1lBQUU7U0FDM0c7UUFDRFUsV0FBVyxJQUFJdEIsSUFBSXdCLE1BQU1OLEdBQUcsQ0FBQ1csQ0FBQUEsSUFBS0EsRUFBRWpCLFFBQVE7UUFDNUNXLGVBQWUsSUFBSXZCLElBQUl5QixVQUFVUCxHQUFHLENBQUNXLENBQUFBLElBQUtBLEVBQUVqQixRQUFRO0lBQ3REO0lBRUEsTUFBTWtCLFNBQW1HLENBQUM7SUFDMUcsS0FBSyxNQUFNNUIsTUFBTUwsSUFBSztRQUNwQmlDLE1BQU0sQ0FBQzVCLEdBQUcsR0FBRztZQUNYNkIsT0FBT2YsYUFBYWdCLEdBQUcsQ0FBQzlCLE9BQU87WUFDL0IrQixXQUFXYixZQUFZWSxHQUFHLENBQUM5QixPQUFPO1lBQ2xDc0IsT0FBT0YsU0FBU1ksR0FBRyxDQUFDaEM7WUFDcEJ1QixXQUFXRixhQUFhVyxHQUFHLENBQUNoQztRQUM5QjtJQUNGO0lBRUEsT0FBT2IsaURBQUVBLENBQUM7UUFBRThDLE9BQU9MO0lBQU87QUFDNUIiLCJzb3VyY2VzIjpbIkQ6XFx4dWVcXHRlc3Qtc3BlYy1wcm9cXHh1ZXJhbi1qdWJlbi1wcm9qZWN0XFxhcHBcXGFwaVxcc2NyaXB0c1xcc3RhdHMtYmF0Y2hcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByaXNtYSB9IGZyb20gJ0Avc3JjL2RiL2NsaWVudCdcclxuaW1wb3J0IHsgb2ssIGJhZFJlcXVlc3QgfSBmcm9tICdAL3NyYy9hcGkvaHR0cCdcclxuaW1wb3J0IHsgZ2V0U2Vzc2lvbiB9IGZyb20gJ0Avc3JjL2F1dGgvc2Vzc2lvbidcclxuXHJcbnR5cGUgQmF0Y2hCb2R5ID0geyBpZHM/OiBzdHJpbmdbXSB9XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IFJlcXVlc3QpIHtcclxuICBjb25zdCBib2R5ID0gKGF3YWl0IHJlcS5qc29uKCkuY2F0Y2goKCkgPT4gbnVsbCkpIGFzIEJhdGNoQm9keSB8IG51bGxcclxuICBjb25zdCBpZHMgPSBBcnJheS5mcm9tKG5ldyBTZXQoKGJvZHk/LmlkcyB8fCBbXSkuZmlsdGVyKGlkID0+IHR5cGVvZiBpZCA9PT0gJ3N0cmluZycgJiYgaWQubGVuZ3RoID4gMCkpKVxyXG4gIGlmICghaWRzLmxlbmd0aCkgcmV0dXJuIGJhZFJlcXVlc3QoJ0VNUFRZX0lEUycpXHJcblxyXG4gIC8vIGNvdW50cyBieSBncm91cFxyXG4gIGNvbnN0IFtsaWtlR3JvdXBzLCBmYXZHcm91cHNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgcHJpc21hLmxpa2UuZ3JvdXBCeSh7IGJ5OiBbJ3NjcmlwdElkJ10sIHdoZXJlOiB7IHNjcmlwdElkOiB7IGluOiBpZHMgfSB9LCBfY291bnQ6IHsgc2NyaXB0SWQ6IHRydWUgfSB9KSxcclxuICAgIHByaXNtYS5mYXZvcml0ZS5ncm91cEJ5KHsgYnk6IFsnc2NyaXB0SWQnXSwgd2hlcmU6IHsgc2NyaXB0SWQ6IHsgaW46IGlkcyB9IH0sIF9jb3VudDogeyBzY3JpcHRJZDogdHJ1ZSB9IH0pXHJcbiAgXSlcclxuICBjb25zdCBsaWtlQ291bnRNYXAgPSBuZXcgTWFwPHN0cmluZywgbnVtYmVyPihsaWtlR3JvdXBzLm1hcChnID0+IFtnLnNjcmlwdElkLCBnLl9jb3VudC5zY3JpcHRJZF0pKVxyXG4gIGNvbnN0IGZhdkNvdW50TWFwID0gbmV3IE1hcDxzdHJpbmcsIG51bWJlcj4oZmF2R3JvdXBzLm1hcChnID0+IFtnLnNjcmlwdElkLCBnLl9jb3VudC5zY3JpcHRJZF0pKVxyXG5cclxuICBjb25zdCBzID0gYXdhaXQgZ2V0U2Vzc2lvbigpXHJcbiAgbGV0IGxpa2VkU2V0ID0gbmV3IFNldDxzdHJpbmc+KCksIGZhdm9yaXRlZFNldCA9IG5ldyBTZXQ8c3RyaW5nPigpXHJcbiAgaWYgKHMpIHtcclxuICAgIGNvbnN0IFtsaWtlZCwgZmF2b3JpdGVkXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgcHJpc21hLmxpa2UuZmluZE1hbnkoeyB3aGVyZTogeyB1c2VySWQ6IHMudXNlcklkLCBzY3JpcHRJZDogeyBpbjogaWRzIH0gfSwgc2VsZWN0OiB7IHNjcmlwdElkOiB0cnVlIH0gfSksXHJcbiAgICAgIHByaXNtYS5mYXZvcml0ZS5maW5kTWFueSh7IHdoZXJlOiB7IHVzZXJJZDogcy51c2VySWQsIHNjcmlwdElkOiB7IGluOiBpZHMgfSB9LCBzZWxlY3Q6IHsgc2NyaXB0SWQ6IHRydWUgfSB9KSxcclxuICAgIF0pXHJcbiAgICBsaWtlZFNldCA9IG5ldyBTZXQobGlrZWQubWFwKHggPT4geC5zY3JpcHRJZCkpXHJcbiAgICBmYXZvcml0ZWRTZXQgPSBuZXcgU2V0KGZhdm9yaXRlZC5tYXAoeCA9PiB4LnNjcmlwdElkKSlcclxuICB9XHJcblxyXG4gIGNvbnN0IHJlc3VsdDogUmVjb3JkPHN0cmluZywgeyBsaWtlczogbnVtYmVyOyBmYXZvcml0ZXM6IG51bWJlcjsgbGlrZWQ6IGJvb2xlYW47IGZhdm9yaXRlZDogYm9vbGVhbiB9PiA9IHt9XHJcbiAgZm9yIChjb25zdCBpZCBvZiBpZHMpIHtcclxuICAgIHJlc3VsdFtpZF0gPSB7XHJcbiAgICAgIGxpa2VzOiBsaWtlQ291bnRNYXAuZ2V0KGlkKSB8fCAwLFxyXG4gICAgICBmYXZvcml0ZXM6IGZhdkNvdW50TWFwLmdldChpZCkgfHwgMCxcclxuICAgICAgbGlrZWQ6IGxpa2VkU2V0LmhhcyhpZCksXHJcbiAgICAgIGZhdm9yaXRlZDogZmF2b3JpdGVkU2V0LmhhcyhpZClcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiBvayh7IGl0ZW1zOiByZXN1bHQgfSlcclxufVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJwcmlzbWEiLCJvayIsImJhZFJlcXVlc3QiLCJnZXRTZXNzaW9uIiwiUE9TVCIsInJlcSIsImJvZHkiLCJqc29uIiwiY2F0Y2giLCJpZHMiLCJBcnJheSIsImZyb20iLCJTZXQiLCJmaWx0ZXIiLCJpZCIsImxlbmd0aCIsImxpa2VHcm91cHMiLCJmYXZHcm91cHMiLCJQcm9taXNlIiwiYWxsIiwibGlrZSIsImdyb3VwQnkiLCJieSIsIndoZXJlIiwic2NyaXB0SWQiLCJpbiIsIl9jb3VudCIsImZhdm9yaXRlIiwibGlrZUNvdW50TWFwIiwiTWFwIiwibWFwIiwiZyIsImZhdkNvdW50TWFwIiwicyIsImxpa2VkU2V0IiwiZmF2b3JpdGVkU2V0IiwibGlrZWQiLCJmYXZvcml0ZWQiLCJmaW5kTWFueSIsInVzZXJJZCIsInNlbGVjdCIsIngiLCJyZXN1bHQiLCJsaWtlcyIsImdldCIsImZhdm9yaXRlcyIsImhhcyIsIml0ZW1zIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/scripts/stats-batch/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fscripts%2Fstats-batch%2Froute&page=%2Fapi%2Fscripts%2Fstats-batch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscripts%2Fstats-batch%2Froute.ts&appDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fscripts%2Fstats-batch%2Froute&page=%2Fapi%2Fscripts%2Fstats-batch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscripts%2Fstats-batch%2Froute.ts&appDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var D_xue_test_spec_pro_xueran_juben_project_app_api_scripts_stats_batch_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/scripts/stats-batch/route.ts */ \"(rsc)/./app/api/scripts/stats-batch/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/scripts/stats-batch/route\",\n        pathname: \"/api/scripts/stats-batch\",\n        filename: \"route\",\n        bundlePath: \"app/api/scripts/stats-batch/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"D:\\\\xue\\\\test-spec-pro\\\\xueran-juben-project\\\\app\\\\api\\\\scripts\\\\stats-batch\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_xue_test_spec_pro_xueran_juben_project_app_api_scripts_stats_batch_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/scripts/stats-batch/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fscripts%2Fstats-batch%2Froute&page=%2Fapi%2Fscripts%2Fstats-batch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscripts%2Fstats-batch%2Froute.ts&appDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/api/http.ts":
/*!*************************!*\
  !*** ./src/api/http.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   badRequest: () => (/* binding */ badRequest),\n/* harmony export */   forbidden: () => (/* binding */ forbidden),\n/* harmony export */   internalError: () => (/* binding */ internalError),\n/* harmony export */   invalidPayload: () => (/* binding */ invalidPayload),\n/* harmony export */   notFound: () => (/* binding */ notFound),\n/* harmony export */   ok: () => (/* binding */ ok),\n/* harmony export */   tooLarge: () => (/* binding */ tooLarge),\n/* harmony export */   unauthorized: () => (/* binding */ unauthorized),\n/* harmony export */   unsupportedMediaType: () => (/* binding */ unsupportedMediaType)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nfunction ok(data, status = 200) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ok: true,\n        data\n    }, {\n        status\n    });\n}\nfunction badRequest(message = 'Invalid request', details) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'BAD_REQUEST',\n            message,\n            details\n        }\n    }, {\n        status: 400\n    });\n}\nfunction invalidPayload(details, message = 'Invalid payload') {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'INVALID_PAYLOAD',\n            message,\n            details\n        }\n    }, {\n        status: 400\n    });\n}\nfunction unauthorized(message = 'Unauthorized') {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'UNAUTHORIZED',\n            message\n        }\n    }, {\n        status: 401\n    });\n}\nfunction forbidden(message = 'Forbidden') {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'FORBIDDEN',\n            message\n        }\n    }, {\n        status: 403\n    });\n}\nfunction notFound(message = 'Not found') {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'NOT_FOUND',\n            message\n        }\n    }, {\n        status: 404\n    });\n}\nfunction unsupportedMediaType(message = 'Unsupported Media Type') {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'UNSUPPORTED_MEDIA_TYPE',\n            message\n        }\n    }, {\n        status: 415\n    });\n}\nfunction tooLarge(message = 'Payload Too Large') {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'PAYLOAD_TOO_LARGE',\n            message\n        }\n    }, {\n        status: 413\n    });\n}\nfunction internalError(message = 'Internal Server Error', details) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: {\n            code: 'INTERNAL_ERROR',\n            message,\n            details\n        }\n    }, {\n        status: 500\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBpL2h0dHAudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUEwQztBQUluQyxTQUFTQyxHQUFNQyxJQUFPLEVBQUVDLFNBQVMsR0FBRztJQUN6QyxPQUFPSCxxREFBWUEsQ0FBQ0ksSUFBSSxDQUFDO1FBQUVILElBQUk7UUFBTUM7SUFBSyxHQUFtQjtRQUFFQztJQUFPO0FBQ3hFO0FBQ08sU0FBU0UsV0FBV0MsVUFBVSxpQkFBaUIsRUFBRUMsT0FBaUI7SUFDdkUsT0FBT1AscURBQVlBLENBQUNJLElBQUksQ0FBQztRQUFFSSxPQUFPO1lBQUVDLE1BQU07WUFBZUg7WUFBU0M7UUFBUTtJQUFFLEdBQWdCO1FBQUVKLFFBQVE7SUFBSTtBQUM1RztBQUNPLFNBQVNPLGVBQWVILE9BQWlCLEVBQUVELFVBQVUsaUJBQWlCO0lBQzNFLE9BQU9OLHFEQUFZQSxDQUFDSSxJQUFJLENBQUM7UUFBRUksT0FBTztZQUFFQyxNQUFNO1lBQW1CSDtZQUFTQztRQUFRO0lBQUUsR0FBZ0I7UUFBRUosUUFBUTtJQUFJO0FBQ2hIO0FBQ08sU0FBU1EsYUFBYUwsVUFBVSxjQUFjO0lBQ25ELE9BQU9OLHFEQUFZQSxDQUFDSSxJQUFJLENBQUM7UUFBRUksT0FBTztZQUFFQyxNQUFNO1lBQWdCSDtRQUFRO0lBQUUsR0FBZ0I7UUFBRUgsUUFBUTtJQUFJO0FBQ3BHO0FBQ08sU0FBU1MsVUFBVU4sVUFBVSxXQUFXO0lBQzdDLE9BQU9OLHFEQUFZQSxDQUFDSSxJQUFJLENBQUM7UUFBRUksT0FBTztZQUFFQyxNQUFNO1lBQWFIO1FBQVE7SUFBRSxHQUFnQjtRQUFFSCxRQUFRO0lBQUk7QUFDakc7QUFDTyxTQUFTVSxTQUFTUCxVQUFVLFdBQVc7SUFDNUMsT0FBT04scURBQVlBLENBQUNJLElBQUksQ0FBQztRQUFFSSxPQUFPO1lBQUVDLE1BQU07WUFBYUg7UUFBUTtJQUFFLEdBQWdCO1FBQUVILFFBQVE7SUFBSTtBQUNqRztBQUNPLFNBQVNXLHFCQUFxQlIsVUFBVSx3QkFBd0I7SUFDckUsT0FBT04scURBQVlBLENBQUNJLElBQUksQ0FBQztRQUFFSSxPQUFPO1lBQUVDLE1BQU07WUFBMEJIO1FBQVE7SUFBRSxHQUFnQjtRQUFFSCxRQUFRO0lBQUk7QUFDOUc7QUFDTyxTQUFTWSxTQUFTVCxVQUFVLG1CQUFtQjtJQUNwRCxPQUFPTixxREFBWUEsQ0FBQ0ksSUFBSSxDQUFDO1FBQUVJLE9BQU87WUFBRUMsTUFBTTtZQUFxQkg7UUFBUTtJQUFFLEdBQWdCO1FBQUVILFFBQVE7SUFBSTtBQUN6RztBQUNPLFNBQVNhLGNBQWNWLFVBQVUsdUJBQXVCLEVBQUVDLE9BQWlCO0lBQ2hGLE9BQU9QLHFEQUFZQSxDQUFDSSxJQUFJLENBQUM7UUFBRUksT0FBTztZQUFFQyxNQUFNO1lBQWtCSDtZQUFTQztRQUFRO0lBQUUsR0FBZ0I7UUFBRUosUUFBUTtJQUFJO0FBQy9HIiwic291cmNlcyI6WyJEOlxceHVlXFx0ZXN0LXNwZWMtcHJvXFx4dWVyYW4tanViZW4tcHJvamVjdFxcc3JjXFxhcGlcXGh0dHAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXHJcblxyXG5leHBvcnQgdHlwZSBFcnJvckJvZHkgPSB7IGVycm9yOiB7IGNvZGU6IHN0cmluZzsgbWVzc2FnZTogc3RyaW5nOyBkZXRhaWxzPzogdW5rbm93biB9IH1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvazxUPihkYXRhOiBULCBzdGF0dXMgPSAyMDApIHtcclxuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBvazogdHJ1ZSwgZGF0YSB9IGFzIHVua25vd24gYXMgVCwgeyBzdGF0dXMgfSlcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gYmFkUmVxdWVzdChtZXNzYWdlID0gJ0ludmFsaWQgcmVxdWVzdCcsIGRldGFpbHM/OiB1bmtub3duKSB7XHJcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IHsgY29kZTogJ0JBRF9SRVFVRVNUJywgbWVzc2FnZSwgZGV0YWlscyB9IH0gYXMgRXJyb3JCb2R5LCB7IHN0YXR1czogNDAwIH0pXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGludmFsaWRQYXlsb2FkKGRldGFpbHM/OiB1bmtub3duLCBtZXNzYWdlID0gJ0ludmFsaWQgcGF5bG9hZCcpIHtcclxuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogeyBjb2RlOiAnSU5WQUxJRF9QQVlMT0FEJywgbWVzc2FnZSwgZGV0YWlscyB9IH0gYXMgRXJyb3JCb2R5LCB7IHN0YXR1czogNDAwIH0pXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHVuYXV0aG9yaXplZChtZXNzYWdlID0gJ1VuYXV0aG9yaXplZCcpIHtcclxuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogeyBjb2RlOiAnVU5BVVRIT1JJWkVEJywgbWVzc2FnZSB9IH0gYXMgRXJyb3JCb2R5LCB7IHN0YXR1czogNDAxIH0pXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGZvcmJpZGRlbihtZXNzYWdlID0gJ0ZvcmJpZGRlbicpIHtcclxuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogeyBjb2RlOiAnRk9SQklEREVOJywgbWVzc2FnZSB9IH0gYXMgRXJyb3JCb2R5LCB7IHN0YXR1czogNDAzIH0pXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIG5vdEZvdW5kKG1lc3NhZ2UgPSAnTm90IGZvdW5kJykge1xyXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiB7IGNvZGU6ICdOT1RfRk9VTkQnLCBtZXNzYWdlIH0gfSBhcyBFcnJvckJvZHksIHsgc3RhdHVzOiA0MDQgfSlcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gdW5zdXBwb3J0ZWRNZWRpYVR5cGUobWVzc2FnZSA9ICdVbnN1cHBvcnRlZCBNZWRpYSBUeXBlJykge1xyXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiB7IGNvZGU6ICdVTlNVUFBPUlRFRF9NRURJQV9UWVBFJywgbWVzc2FnZSB9IH0gYXMgRXJyb3JCb2R5LCB7IHN0YXR1czogNDE1IH0pXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIHRvb0xhcmdlKG1lc3NhZ2UgPSAnUGF5bG9hZCBUb28gTGFyZ2UnKSB7XHJcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IHsgY29kZTogJ1BBWUxPQURfVE9PX0xBUkdFJywgbWVzc2FnZSB9IH0gYXMgRXJyb3JCb2R5LCB7IHN0YXR1czogNDEzIH0pXHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGludGVybmFsRXJyb3IobWVzc2FnZSA9ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InLCBkZXRhaWxzPzogdW5rbm93bikge1xyXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiB7IGNvZGU6ICdJTlRFUk5BTF9FUlJPUicsIG1lc3NhZ2UsIGRldGFpbHMgfSB9IGFzIEVycm9yQm9keSwgeyBzdGF0dXM6IDUwMCB9KVxyXG59XHJcbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJvayIsImRhdGEiLCJzdGF0dXMiLCJqc29uIiwiYmFkUmVxdWVzdCIsIm1lc3NhZ2UiLCJkZXRhaWxzIiwiZXJyb3IiLCJjb2RlIiwiaW52YWxpZFBheWxvYWQiLCJ1bmF1dGhvcml6ZWQiLCJmb3JiaWRkZW4iLCJub3RGb3VuZCIsInVuc3VwcG9ydGVkTWVkaWFUeXBlIiwidG9vTGFyZ2UiLCJpbnRlcm5hbEVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/api/http.ts\n");

/***/ }),

/***/ "(rsc)/./src/auth/session.ts":
/*!*****************************!*\
  !*** ./src/auth/session.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearSessionCookie: () => (/* binding */ clearSessionCookie),\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   setSessionCookie: () => (/* binding */ setSessionCookie),\n/* harmony export */   signSession: () => (/* binding */ signSession),\n/* harmony export */   verifySessionToken: () => (/* binding */ verifySessionToken)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\n\nconst SECRET = process.env.NEXTAUTH_SECRET || 'dev-secret';\nconst ALG = 'sha256';\nconst COOKIE_NAME = 'session';\nfunction signSession(payload, ttlSeconds = 7 * 24 * 3600) {\n    const exp = Math.floor(Date.now() / 1000) + ttlSeconds;\n    const body = Buffer.from(JSON.stringify({\n        ...payload,\n        exp\n    })).toString('base64url');\n    const sig = node_crypto__WEBPACK_IMPORTED_MODULE_0___default().createHmac(ALG, SECRET).update(body).digest('base64url');\n    return `${body}.${sig}`;\n}\nfunction verifySessionToken(token) {\n    if (!token) return null;\n    const parts = token.split('.');\n    if (parts.length !== 2) return null;\n    const [body, sig] = parts;\n    const expected = node_crypto__WEBPACK_IMPORTED_MODULE_0___default().createHmac(ALG, SECRET).update(body).digest('base64url');\n    if (!node_crypto__WEBPACK_IMPORTED_MODULE_0___default().timingSafeEqual(Buffer.from(sig), Buffer.from(expected))) return null;\n    const payload = JSON.parse(Buffer.from(body, 'base64url').toString());\n    if (payload.exp < Math.floor(Date.now() / 1000)) return null;\n    return payload;\n}\nasync function setSessionCookie(token) {\n    (await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)()).set(COOKIE_NAME, token, {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        maxAge: 7 * 24 * 3600\n    });\n}\nasync function clearSessionCookie() {\n    (await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)()).set(COOKIE_NAME, '', {\n        httpOnly: true,\n        sameSite: 'lax',\n        path: '/',\n        maxAge: 0\n    });\n}\nasync function getSession() {\n    return verifySessionToken((await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)()).get(COOKIE_NAME)?.value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXV0aC9zZXNzaW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ007QUFFdEMsTUFBTUUsU0FBU0MsUUFBUUMsR0FBRyxDQUFDQyxlQUFlLElBQUk7QUFDOUMsTUFBTUMsTUFBTTtBQUNaLE1BQU1DLGNBQWM7QUFJYixTQUFTQyxZQUFZQyxPQUFvQyxFQUFFQyxhQUFhLElBQUksS0FBSyxJQUFJO0lBQzFGLE1BQU1DLE1BQU1DLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0MsR0FBRyxLQUFLLFFBQVFMO0lBQzVDLE1BQU1NLE9BQU9DLE9BQU9DLElBQUksQ0FBQ0MsS0FBS0MsU0FBUyxDQUFDO1FBQUUsR0FBR1gsT0FBTztRQUFFRTtJQUFJLElBQUlVLFFBQVEsQ0FBQztJQUN2RSxNQUFNQyxNQUFNdEIsNkRBQWlCLENBQUNNLEtBQUtKLFFBQVFzQixNQUFNLENBQUNSLE1BQU1TLE1BQU0sQ0FBQztJQUMvRCxPQUFPLEdBQUdULEtBQUssQ0FBQyxFQUFFTSxLQUFLO0FBQ3pCO0FBQ08sU0FBU0ksbUJBQW1CQyxLQUF5QjtJQUMxRCxJQUFJLENBQUNBLE9BQU8sT0FBTztJQUNuQixNQUFNQyxRQUFRRCxNQUFNRSxLQUFLLENBQUM7SUFDMUIsSUFBSUQsTUFBTUUsTUFBTSxLQUFLLEdBQUcsT0FBTztJQUMvQixNQUFNLENBQUNkLE1BQU1NLElBQUksR0FBR007SUFDcEIsTUFBTUcsV0FBVy9CLDZEQUFpQixDQUFDTSxLQUFLSixRQUFRc0IsTUFBTSxDQUFDUixNQUFNUyxNQUFNLENBQUM7SUFDcEUsSUFBSSxDQUFDekIsa0VBQXNCLENBQUNpQixPQUFPQyxJQUFJLENBQUNJLE1BQU1MLE9BQU9DLElBQUksQ0FBQ2EsWUFBWSxPQUFPO0lBQzdFLE1BQU10QixVQUFVVSxLQUFLYyxLQUFLLENBQUNoQixPQUFPQyxJQUFJLENBQUNGLE1BQU0sYUFBYUssUUFBUTtJQUNsRSxJQUFJWixRQUFRRSxHQUFHLEdBQUdDLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0MsR0FBRyxLQUFLLE9BQU8sT0FBTztJQUN4RCxPQUFPTjtBQUNUO0FBQ08sZUFBZXlCLGlCQUFpQlAsS0FBYTtJQUNqRCxPQUFNMUIscURBQU9BLEVBQUMsRUFBR2tDLEdBQUcsQ0FBQzVCLGFBQWFvQixPQUFPO1FBQUVTLFVBQVU7UUFBTUMsVUFBVTtRQUFPQyxNQUFNO1FBQUtDLFFBQVEsSUFBSSxLQUFLO0lBQUs7QUFDaEg7QUFDTyxlQUFlQztJQUF3QixPQUFNdkMscURBQU9BLEVBQUMsRUFBR2tDLEdBQUcsQ0FBQzVCLGFBQWEsSUFBSTtRQUFFNkIsVUFBVTtRQUFNQyxVQUFVO1FBQU9DLE1BQU07UUFBS0MsUUFBUTtJQUFFO0FBQUc7QUFDeEksZUFBZUU7SUFDcEIsT0FBT2YsbUJBQW1CLENBQUMsTUFBTXpCLHFEQUFPQSxFQUFDLEVBQUd5QyxHQUFHLENBQUNuQyxjQUFjb0M7QUFDaEUiLCJzb3VyY2VzIjpbIkQ6XFx4dWVcXHRlc3Qtc3BlYy1wcm9cXHh1ZXJhbi1qdWJlbi1wcm9qZWN0XFxzcmNcXGF1dGhcXHNlc3Npb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdub2RlOmNyeXB0bydcclxuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycydcclxuXHJcbmNvbnN0IFNFQ1JFVCA9IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCB8fCAnZGV2LXNlY3JldCdcclxuY29uc3QgQUxHID0gJ3NoYTI1NidcclxuY29uc3QgQ09PS0lFX05BTUUgPSAnc2Vzc2lvbidcclxuXHJcbmV4cG9ydCB0eXBlIFNlc3Npb25QYXlsb2FkID0geyB1c2VySWQ6IHN0cmluZzsgZW1haWw6IHN0cmluZzsgcm9sZTogJ2FkbWluJyB8ICd1c2VyJzsgZXhwOiBudW1iZXIgfVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNpZ25TZXNzaW9uKHBheWxvYWQ6IE9taXQ8U2Vzc2lvblBheWxvYWQsICdleHAnPiwgdHRsU2Vjb25kcyA9IDcgKiAyNCAqIDM2MDApOiBzdHJpbmcge1xyXG4gIGNvbnN0IGV4cCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApICsgdHRsU2Vjb25kc1xyXG4gIGNvbnN0IGJvZHkgPSBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeSh7IC4uLnBheWxvYWQsIGV4cCB9KSkudG9TdHJpbmcoJ2Jhc2U2NHVybCcpXHJcbiAgY29uc3Qgc2lnID0gY3J5cHRvLmNyZWF0ZUhtYWMoQUxHLCBTRUNSRVQpLnVwZGF0ZShib2R5KS5kaWdlc3QoJ2Jhc2U2NHVybCcpXHJcbiAgcmV0dXJuIGAke2JvZHl9LiR7c2lnfWBcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5U2Vzc2lvblRva2VuKHRva2VuOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBTZXNzaW9uUGF5bG9hZCB8IG51bGwge1xyXG4gIGlmICghdG9rZW4pIHJldHVybiBudWxsXHJcbiAgY29uc3QgcGFydHMgPSB0b2tlbi5zcGxpdCgnLicpXHJcbiAgaWYgKHBhcnRzLmxlbmd0aCAhPT0gMikgcmV0dXJuIG51bGxcclxuICBjb25zdCBbYm9keSwgc2lnXSA9IHBhcnRzXHJcbiAgY29uc3QgZXhwZWN0ZWQgPSBjcnlwdG8uY3JlYXRlSG1hYyhBTEcsIFNFQ1JFVCkudXBkYXRlKGJvZHkpLmRpZ2VzdCgnYmFzZTY0dXJsJylcclxuICBpZiAoIWNyeXB0by50aW1pbmdTYWZlRXF1YWwoQnVmZmVyLmZyb20oc2lnKSwgQnVmZmVyLmZyb20oZXhwZWN0ZWQpKSkgcmV0dXJuIG51bGxcclxuICBjb25zdCBwYXlsb2FkID0gSlNPTi5wYXJzZShCdWZmZXIuZnJvbShib2R5LCAnYmFzZTY0dXJsJykudG9TdHJpbmcoKSkgYXMgU2Vzc2lvblBheWxvYWRcclxuICBpZiAocGF5bG9hZC5leHAgPCBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSkgcmV0dXJuIG51bGxcclxuICByZXR1cm4gcGF5bG9hZFxyXG59XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRTZXNzaW9uQ29va2llKHRva2VuOiBzdHJpbmcpIHtcclxuICAoYXdhaXQgY29va2llcygpKS5zZXQoQ09PS0lFX05BTUUsIHRva2VuLCB7IGh0dHBPbmx5OiB0cnVlLCBzYW1lU2l0ZTogJ2xheCcsIHBhdGg6ICcvJywgbWF4QWdlOiA3ICogMjQgKiAzNjAwIH0pXHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNsZWFyU2Vzc2lvbkNvb2tpZSgpIHsgKGF3YWl0IGNvb2tpZXMoKSkuc2V0KENPT0tJRV9OQU1FLCAnJywgeyBodHRwT25seTogdHJ1ZSwgc2FtZVNpdGU6ICdsYXgnLCBwYXRoOiAnLycsIG1heEFnZTogMCB9KSB9XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXNzaW9uKCk6IFByb21pc2U8U2Vzc2lvblBheWxvYWQgfCBudWxsPiB7IFxyXG4gIHJldHVybiB2ZXJpZnlTZXNzaW9uVG9rZW4oKGF3YWl0IGNvb2tpZXMoKSkuZ2V0KENPT0tJRV9OQU1FKT8udmFsdWUpIFxyXG59XHJcbiJdLCJuYW1lcyI6WyJjcnlwdG8iLCJjb29raWVzIiwiU0VDUkVUIiwicHJvY2VzcyIsImVudiIsIk5FWFRBVVRIX1NFQ1JFVCIsIkFMRyIsIkNPT0tJRV9OQU1FIiwic2lnblNlc3Npb24iLCJwYXlsb2FkIiwidHRsU2Vjb25kcyIsImV4cCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJib2R5IiwiQnVmZmVyIiwiZnJvbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b1N0cmluZyIsInNpZyIsImNyZWF0ZUhtYWMiLCJ1cGRhdGUiLCJkaWdlc3QiLCJ2ZXJpZnlTZXNzaW9uVG9rZW4iLCJ0b2tlbiIsInBhcnRzIiwic3BsaXQiLCJsZW5ndGgiLCJleHBlY3RlZCIsInRpbWluZ1NhZmVFcXVhbCIsInBhcnNlIiwic2V0U2Vzc2lvbkNvb2tpZSIsInNldCIsImh0dHBPbmx5Iiwic2FtZVNpdGUiLCJwYXRoIiwibWF4QWdlIiwiY2xlYXJTZXNzaW9uQ29va2llIiwiZ2V0U2Vzc2lvbiIsImdldCIsInZhbHVlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/auth/session.ts\n");

/***/ }),

/***/ "(rsc)/./src/db/client.ts":
/*!**************************!*\
  !*** ./src/db/client.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkDatabaseHealth: () => (/* binding */ checkDatabaseHealth),\n/* harmony export */   ensureConnection: () => (/* binding */ ensureConnection),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_utils_performance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/utils/performance */ \"(rsc)/./src/utils/performance.ts\");\n\n\nconst globalForPrisma = globalThis;\n// 创建优化的Prisma客户端\nfunction createPrismaClient() {\n    const client = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n        log:  true ? [\n            {\n                emit: 'event',\n                level: 'query'\n            },\n            {\n                emit: 'event',\n                level: 'error'\n            },\n            {\n                emit: 'event',\n                level: 'warn'\n            }\n        ] : 0,\n        // 连接配置优化\n        datasources: {\n            db: {\n                url: process.env.DATABASE_URL\n            }\n        }\n    });\n    // 查询性能监控\n    if (true) {\n        client.$on('query', (e)=>{\n            const duration = e.duration;\n            _src_utils_performance__WEBPACK_IMPORTED_MODULE_1__.perfStats.record('db-query', duration);\n            if (duration > 100) {\n                console.warn(`[SLOW QUERY] ${duration}ms - ${e.query.substring(0, 100)}...`);\n                console.warn(`[SLOW QUERY PARAMS]`, e.params);\n            }\n        });\n        client.$on('error', (e)=>{\n            console.error('[DB ERROR]', e);\n        });\n    }\n    return client;\n}\nconst prisma = globalForPrisma.prisma ?? createPrismaClient();\n// 开发环境缓存客户端\nif (true) {\n    globalForPrisma.prisma = prisma;\n}\n// 连接状态管理\nasync function ensureConnection() {\n    if (globalForPrisma.prismaConnected) {\n        return;\n    }\n    try {\n        await prisma.$connect();\n        globalForPrisma.prismaConnected = true;\n        console.log('[DB] Connected successfully');\n    } catch (error) {\n        console.error('[DB] Connection failed:', error);\n        throw error;\n    }\n}\n// 优雅关闭\nasync function gracefulShutdown() {\n    console.log('[DB] Disconnecting...');\n    await prisma.$disconnect();\n    globalForPrisma.prismaConnected = false;\n}\n// 监听进程退出 (仅在服务器端)\nif (true) {\n    process.on('beforeExit', gracefulShutdown);\n    process.on('SIGTERM', gracefulShutdown);\n    process.on('SIGINT', gracefulShutdown);\n}\n// 数据库健康检查\nasync function checkDatabaseHealth() {\n    const start = Date.now();\n    try {\n        await prisma.$queryRaw`SELECT 1`;\n        const latency = Date.now() - start;\n        return {\n            status: 'healthy',\n            latency\n        };\n    } catch (error) {\n        console.error('[DB HEALTH] Check failed:', error);\n        return {\n            status: 'unhealthy',\n            latency: Date.now() - start\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvZGIvY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2QztBQUNNO0FBRW5ELE1BQU1FLGtCQUFrQkM7QUFLeEIsaUJBQWlCO0FBQ2pCLFNBQVNDO0lBQ1AsTUFBTUMsU0FBUyxJQUFJTCx3REFBWUEsQ0FBQztRQUM5Qk0sS0FBS0MsS0FBc0MsR0FBRztZQUM1QztnQkFDRUMsTUFBTTtnQkFDTkMsT0FBTztZQUNUO1lBQ0E7Z0JBQ0VELE1BQU07Z0JBQ05DLE9BQU87WUFDVDtZQUNBO2dCQUNFRCxNQUFNO2dCQUNOQyxPQUFPO1lBQ1Q7U0FDRCxHQUFHLENBQVM7UUFFYixTQUFTO1FBQ1RDLGFBQWE7WUFDWEMsSUFBSTtnQkFDRkMsS0FBS0wsUUFBUU0sR0FBRyxDQUFDQyxZQUFZO1lBQy9CO1FBQ0Y7SUFDRjtJQUVBLFNBQVM7SUFDVCxJQUFJUCxJQUFzQyxFQUFFO1FBQzFDRixPQUFPVSxHQUFHLENBQUMsU0FBUyxDQUFDQztZQUNuQixNQUFNQyxXQUFXRCxFQUFFQyxRQUFRO1lBQzNCaEIsNkRBQVNBLENBQUNpQixNQUFNLENBQUMsWUFBWUQ7WUFFN0IsSUFBSUEsV0FBVyxLQUFLO2dCQUNsQkUsUUFBUUMsSUFBSSxDQUFDLENBQUMsYUFBYSxFQUFFSCxTQUFTLEtBQUssRUFBRUQsRUFBRUssS0FBSyxDQUFDQyxTQUFTLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQztnQkFDM0VILFFBQVFDLElBQUksQ0FBQyxDQUFDLG1CQUFtQixDQUFDLEVBQUVKLEVBQUVPLE1BQU07WUFDOUM7UUFDRjtRQUVBbEIsT0FBT1UsR0FBRyxDQUFDLFNBQVMsQ0FBQ0M7WUFDbkJHLFFBQVFLLEtBQUssQ0FBQyxjQUFjUjtRQUM5QjtJQUNGO0lBRUEsT0FBT1g7QUFDVDtBQUVPLE1BQU1vQixTQUFTdkIsZ0JBQWdCdUIsTUFBTSxJQUFJckIscUJBQW9CO0FBRXBFLFlBQVk7QUFDWixJQUFJRyxJQUFxQyxFQUFFO0lBQ3pDTCxnQkFBZ0J1QixNQUFNLEdBQUdBO0FBQzNCO0FBRUEsU0FBUztBQUNGLGVBQWVDO0lBQ3BCLElBQUl4QixnQkFBZ0J5QixlQUFlLEVBQUU7UUFDbkM7SUFDRjtJQUVBLElBQUk7UUFDRixNQUFNRixPQUFPRyxRQUFRO1FBQ3JCMUIsZ0JBQWdCeUIsZUFBZSxHQUFHO1FBQ2xDUixRQUFRYixHQUFHLENBQUM7SUFDZCxFQUFFLE9BQU9rQixPQUFPO1FBQ2RMLFFBQVFLLEtBQUssQ0FBQywyQkFBMkJBO1FBQ3pDLE1BQU1BO0lBQ1I7QUFDRjtBQUVBLE9BQU87QUFDUCxlQUFlSztJQUNiVixRQUFRYixHQUFHLENBQUM7SUFDWixNQUFNbUIsT0FBT0ssV0FBVztJQUN4QjVCLGdCQUFnQnlCLGVBQWUsR0FBRztBQUNwQztBQUVBLGtCQUFrQjtBQUNsQixJQUFJLElBQTZCLEVBQUU7SUFDakNwQixRQUFRd0IsRUFBRSxDQUFDLGNBQWNGO0lBQ3pCdEIsUUFBUXdCLEVBQUUsQ0FBQyxXQUFXRjtJQUN0QnRCLFFBQVF3QixFQUFFLENBQUMsVUFBVUY7QUFDdkI7QUFFQSxVQUFVO0FBQ0gsZUFBZUc7SUFDcEIsTUFBTUMsUUFBUUMsS0FBS0MsR0FBRztJQUV0QixJQUFJO1FBQ0YsTUFBTVYsT0FBT1csU0FBUyxDQUFDLFFBQVEsQ0FBQztRQUNoQyxNQUFNQyxVQUFVSCxLQUFLQyxHQUFHLEtBQUtGO1FBRTdCLE9BQU87WUFDTEssUUFBUTtZQUNSRDtRQUNGO0lBQ0YsRUFBRSxPQUFPYixPQUFPO1FBQ2RMLFFBQVFLLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE9BQU87WUFDTGMsUUFBUTtZQUNSRCxTQUFTSCxLQUFLQyxHQUFHLEtBQUtGO1FBQ3hCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiRDpcXHh1ZVxcdGVzdC1zcGVjLXByb1xceHVlcmFuLWp1YmVuLXByb2plY3RcXHNyY1xcZGJcXGNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcclxuaW1wb3J0IHsgcGVyZlN0YXRzIH0gZnJvbSAnQC9zcmMvdXRpbHMvcGVyZm9ybWFuY2UnXHJcblxyXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWxUaGlzIGFzIHVua25vd24gYXMgeyBcclxuICBwcmlzbWE/OiBQcmlzbWFDbGllbnQ7XHJcbiAgcHJpc21hQ29ubmVjdGVkPzogYm9vbGVhbjtcclxufVxyXG5cclxuLy8g5Yib5bu65LyY5YyW55qEUHJpc21h5a6i5oi356uvXHJcbmZ1bmN0aW9uIGNyZWF0ZVByaXNtYUNsaWVudCgpIHtcclxuICBjb25zdCBjbGllbnQgPSBuZXcgUHJpc21hQ2xpZW50KHtcclxuICAgIGxvZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBbXHJcbiAgICAgIHtcclxuICAgICAgICBlbWl0OiAnZXZlbnQnLFxyXG4gICAgICAgIGxldmVsOiAncXVlcnknLFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgZW1pdDogJ2V2ZW50JyxcclxuICAgICAgICBsZXZlbDogJ2Vycm9yJyxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGVtaXQ6ICdldmVudCcsXHJcbiAgICAgICAgbGV2ZWw6ICd3YXJuJyxcclxuICAgICAgfVxyXG4gICAgXSA6IFsnZXJyb3InXSxcclxuICAgIFxyXG4gICAgLy8g6L+e5o6l6YWN572u5LyY5YyWXHJcbiAgICBkYXRhc291cmNlczoge1xyXG4gICAgICBkYjoge1xyXG4gICAgICAgIHVybDogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KVxyXG5cclxuICAvLyDmn6Xor6LmgKfog73nm5HmjqdcclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcclxuICAgIGNsaWVudC4kb24oJ3F1ZXJ5JywgKGUpID0+IHtcclxuICAgICAgY29uc3QgZHVyYXRpb24gPSBlLmR1cmF0aW9uXHJcbiAgICAgIHBlcmZTdGF0cy5yZWNvcmQoJ2RiLXF1ZXJ5JywgZHVyYXRpb24pXHJcbiAgICAgIFxyXG4gICAgICBpZiAoZHVyYXRpb24gPiAxMDApIHtcclxuICAgICAgICBjb25zb2xlLndhcm4oYFtTTE9XIFFVRVJZXSAke2R1cmF0aW9ufW1zIC0gJHtlLnF1ZXJ5LnN1YnN0cmluZygwLCAxMDApfS4uLmApXHJcbiAgICAgICAgY29uc29sZS53YXJuKGBbU0xPVyBRVUVSWSBQQVJBTVNdYCwgZS5wYXJhbXMpXHJcbiAgICAgIH1cclxuICAgIH0pXHJcblxyXG4gICAgY2xpZW50LiRvbignZXJyb3InLCAoZSkgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdbREIgRVJST1JdJywgZSlcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICByZXR1cm4gY2xpZW50XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/IGNyZWF0ZVByaXNtYUNsaWVudCgpXHJcblxyXG4vLyDlvIDlj5Hnjq/looPnvJPlrZjlrqLmiLfnq69cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcclxuICBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hXHJcbn1cclxuXHJcbi8vIOi/nuaOpeeKtuaAgeeuoeeQhlxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZW5zdXJlQ29ubmVjdGlvbigpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBpZiAoZ2xvYmFsRm9yUHJpc21hLnByaXNtYUNvbm5lY3RlZCkge1xyXG4gICAgcmV0dXJuXHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgYXdhaXQgcHJpc21hLiRjb25uZWN0KClcclxuICAgIGdsb2JhbEZvclByaXNtYS5wcmlzbWFDb25uZWN0ZWQgPSB0cnVlXHJcbiAgICBjb25zb2xlLmxvZygnW0RCXSBDb25uZWN0ZWQgc3VjY2Vzc2Z1bGx5JylcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignW0RCXSBDb25uZWN0aW9uIGZhaWxlZDonLCBlcnJvcilcclxuICAgIHRocm93IGVycm9yXHJcbiAgfVxyXG59XHJcblxyXG4vLyDkvJjpm4XlhbPpl61cclxuYXN5bmMgZnVuY3Rpb24gZ3JhY2VmdWxTaHV0ZG93bigpIHtcclxuICBjb25zb2xlLmxvZygnW0RCXSBEaXNjb25uZWN0aW5nLi4uJylcclxuICBhd2FpdCBwcmlzbWEuJGRpc2Nvbm5lY3QoKVxyXG4gIGdsb2JhbEZvclByaXNtYS5wcmlzbWFDb25uZWN0ZWQgPSBmYWxzZVxyXG59XHJcblxyXG4vLyDnm5HlkKzov5vnqIvpgIDlh7ogKOS7heWcqOacjeWKoeWZqOerrylcclxuaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgcHJvY2Vzcy5vbignYmVmb3JlRXhpdCcsIGdyYWNlZnVsU2h1dGRvd24pXHJcbiAgcHJvY2Vzcy5vbignU0lHVEVSTScsIGdyYWNlZnVsU2h1dGRvd24pXHJcbiAgcHJvY2Vzcy5vbignU0lHSU5UJywgZ3JhY2VmdWxTaHV0ZG93bilcclxufVxyXG5cclxuLy8g5pWw5o2u5bqT5YGl5bq35qOA5p+lXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0RhdGFiYXNlSGVhbHRoKCk6IFByb21pc2U8eyBzdGF0dXM6IHN0cmluZzsgbGF0ZW5jeTogbnVtYmVyIH0+IHtcclxuICBjb25zdCBzdGFydCA9IERhdGUubm93KClcclxuICBcclxuICB0cnkge1xyXG4gICAgYXdhaXQgcHJpc21hLiRxdWVyeVJhd2BTRUxFQ1QgMWBcclxuICAgIGNvbnN0IGxhdGVuY3kgPSBEYXRlLm5vdygpIC0gc3RhcnRcclxuICAgIFxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3RhdHVzOiAnaGVhbHRoeScsXHJcbiAgICAgIGxhdGVuY3lcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignW0RCIEhFQUxUSF0gQ2hlY2sgZmFpbGVkOicsIGVycm9yKVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3RhdHVzOiAndW5oZWFsdGh5JyxcclxuICAgICAgbGF0ZW5jeTogRGF0ZS5ub3coKSAtIHN0YXJ0XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwZXJmU3RhdHMiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwiY3JlYXRlUHJpc21hQ2xpZW50IiwiY2xpZW50IiwibG9nIiwicHJvY2VzcyIsImVtaXQiLCJsZXZlbCIsImRhdGFzb3VyY2VzIiwiZGIiLCJ1cmwiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCIkb24iLCJlIiwiZHVyYXRpb24iLCJyZWNvcmQiLCJjb25zb2xlIiwid2FybiIsInF1ZXJ5Iiwic3Vic3RyaW5nIiwicGFyYW1zIiwiZXJyb3IiLCJwcmlzbWEiLCJlbnN1cmVDb25uZWN0aW9uIiwicHJpc21hQ29ubmVjdGVkIiwiJGNvbm5lY3QiLCJncmFjZWZ1bFNodXRkb3duIiwiJGRpc2Nvbm5lY3QiLCJvbiIsImNoZWNrRGF0YWJhc2VIZWFsdGgiLCJzdGFydCIsIkRhdGUiLCJub3ciLCIkcXVlcnlSYXciLCJsYXRlbmN5Iiwic3RhdHVzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/db/client.ts\n");

/***/ }),

/***/ "(rsc)/./src/utils/performance.ts":
/*!**********************************!*\
  !*** ./src/utils/performance.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   measureDbQuery: () => (/* binding */ measureDbQuery),\n/* harmony export */   perfMonitor: () => (/* binding */ perfMonitor),\n/* harmony export */   perfStats: () => (/* binding */ perfStats),\n/* harmony export */   withApiPerformance: () => (/* binding */ withApiPerformance),\n/* harmony export */   withPerfStats: () => (/* binding */ withPerfStats),\n/* harmony export */   withPerformance: () => (/* binding */ withPerformance)\n/* harmony export */ });\n/**\r\n * 性能监控工具\r\n * 用于测量API响应时间和识别性能瓶颈\r\n */ // 性能指标接口\n// 性能监控类\nclass PerformanceMonitor {\n    constructor(slowThreshold = 1000){\n        this.metrics = new Map();\n        this.slowThreshold = slowThreshold;\n    }\n    // 开始测量\n    start(name, metadata) {\n        this.metrics.set(name, {\n            name,\n            startTime: Date.now(),\n            metadata\n        });\n    }\n    // 结束测量\n    end(name) {\n        const metric = this.metrics.get(name);\n        if (!metric) {\n            console.warn(`[PERF] Metric '${name}' not found`);\n            return 0;\n        }\n        const endTime = Date.now();\n        const duration = endTime - metric.startTime;\n        metric.endTime = endTime;\n        metric.duration = duration;\n        // 记录结果\n        const level = duration > this.slowThreshold ? 'WARN' : 'INFO';\n        console.log(`[PERF ${level}] ${name} - ${duration}ms`, metric.metadata || '');\n        // 清理\n        this.metrics.delete(name);\n        return duration;\n    }\n    // 获取所有指标\n    getAllMetrics() {\n        return Array.from(this.metrics.values());\n    }\n}\n// 全局性能监控实例\nconst perfMonitor = new PerformanceMonitor(500) // 500ms慢查询阈值\n;\n// 装饰器函数 - 自动测量函数性能\nfunction withPerformance(name, fn) {\n    return (...args)=>{\n        const startTime = Date.now();\n        try {\n            const result = fn(...args);\n            // 处理异步函数\n            if (result instanceof Promise) {\n                return result.then((data)=>{\n                    const duration = Date.now() - startTime;\n                    console.log(`[PERF] ${name} - ${duration}ms`);\n                    return data;\n                }).catch((error)=>{\n                    const duration = Date.now() - startTime;\n                    console.error(`[PERF ERROR] ${name} - ${duration}ms`, error);\n                    throw error;\n                });\n            }\n            // 处理同步函数\n            const duration = Date.now() - startTime;\n            console.log(`[PERF] ${name} - ${duration}ms`);\n            return result;\n        } catch (error) {\n            const duration = Date.now() - startTime;\n            console.error(`[PERF ERROR] ${name} - ${duration}ms`, error);\n            throw error;\n        }\n    };\n}\n// API中间件 - 自动测量API性能\nfunction withApiPerformance(handler, routeName) {\n    return async (req, ...args)=>{\n        const method = req.method || 'UNKNOWN';\n        const url = req.url || req.nextUrl?.pathname || 'UNKNOWN';\n        const name = routeName || `${method} ${url}`;\n        const startTime = Date.now();\n        const requestId = Math.random().toString(36).substr(2, 9);\n        console.log(`[API START] ${name} [${requestId}]`);\n        try {\n            const result = await handler(req, ...args);\n            const duration = Date.now() - startTime;\n            // 记录成功的API调用\n            const status = result?.status || 200;\n            console.log(`[API SUCCESS] ${name} [${requestId}] - ${duration}ms (${status})`);\n            // 慢API警告\n            if (duration > 500) {\n                console.warn(`[SLOW API] ${name} [${requestId}] - ${duration}ms - Consider optimization!`);\n            }\n            return result;\n        } catch (error) {\n            const duration = Date.now() - startTime;\n            console.error(`[API ERROR] ${name} [${requestId}] - ${duration}ms`, error);\n            throw error;\n        }\n    };\n}\n// 数据库查询性能测量\nasync function measureDbQuery(queryName, queryFn, expectedRows) {\n    const startTime = Date.now();\n    try {\n        const result = await queryFn();\n        const duration = Date.now() - startTime;\n        // 计算行数（如果结果是数组）\n        const rowCount = Array.isArray(result) ? result.length : 1;\n        const rowInfo = expectedRows ? `${rowCount}/${expectedRows} rows` : `${rowCount} rows`;\n        console.log(`[DB QUERY] ${queryName} - ${duration}ms (${rowInfo})`);\n        // 慢查询警告\n        if (duration > 100) {\n            console.warn(`[SLOW QUERY] ${queryName} - ${duration}ms - Consider adding index or optimizing query`);\n        }\n        return result;\n    } catch (error) {\n        const duration = Date.now() - startTime;\n        console.error(`[DB ERROR] ${queryName} - ${duration}ms`, error);\n        throw error;\n    }\n}\n// 性能统计收集器\nclass PerformanceStats {\n    record(name, duration) {\n        const existing = this.stats.get(name);\n        if (existing) {\n            existing.count++;\n            existing.totalTime += duration;\n            existing.minTime = Math.min(existing.minTime, duration);\n            existing.maxTime = Math.max(existing.maxTime, duration);\n            existing.avgTime = existing.totalTime / existing.count;\n        } else {\n            this.stats.set(name, {\n                count: 1,\n                totalTime: duration,\n                minTime: duration,\n                maxTime: duration,\n                avgTime: duration\n            });\n        }\n    }\n    getStats() {\n        const result = {};\n        for (const [name, stat] of this.stats.entries()){\n            result[name] = {\n                ...stat,\n                avgTime: Math.round(stat.avgTime * 100) / 100 // 保留2位小数\n            };\n        }\n        return result;\n    }\n    reset() {\n        this.stats.clear();\n    }\n    // 生成性能报告\n    generateReport() {\n        const stats = this.getStats();\n        const sortedStats = Object.entries(stats).sort((a, b)=>b[1].avgTime - a[1].avgTime);\n        let report = '\\n=== 性能统计报告 ===\\n';\n        report += 'API/Query                     Count    Avg      Min      Max      Total\\n';\n        report += '─'.repeat(70) + '\\n';\n        for (const [name, stat] of sortedStats){\n            const nameStr = name.padEnd(30);\n            const countStr = stat.count.toString().padStart(8);\n            const avgStr = `${stat.avgTime}ms`.padStart(8);\n            const minStr = `${stat.minTime}ms`.padStart(8);\n            const maxStr = `${stat.maxTime}ms`.padStart(8);\n            const totalStr = `${stat.totalTime}ms`.padStart(10);\n            report += `${nameStr} ${countStr} ${avgStr} ${minStr} ${maxStr} ${totalStr}\\n`;\n        }\n        return report;\n    }\n    constructor(){\n        this.stats = new Map();\n    }\n}\nconst perfStats = new PerformanceStats();\n// 自动记录性能统计的装饰器\nfunction withPerfStats(name, fn) {\n    return (...args)=>{\n        const startTime = Date.now();\n        try {\n            const result = fn(...args);\n            if (result instanceof Promise) {\n                return result.then((data)=>{\n                    const duration = Date.now() - startTime;\n                    perfStats.record(name, duration);\n                    return data;\n                }).catch((error)=>{\n                    const duration = Date.now() - startTime;\n                    perfStats.record(`${name}_ERROR`, duration);\n                    throw error;\n                });\n            }\n            const duration = Date.now() - startTime;\n            perfStats.record(name, duration);\n            return result;\n        } catch (error) {\n            const duration = Date.now() - startTime;\n            perfStats.record(`${name}_ERROR`, duration);\n            throw error;\n        }\n    };\n}\n// 定期打印性能报告 (仅在服务器端)\nif (true) {\n    setInterval(()=>{\n        const report = perfStats.generateReport();\n        if (Object.keys(perfStats.getStats()).length > 0) {\n            console.log(report);\n            perfStats.reset(); // 重置统计\n        }\n    }, 60000); // 每分钟输出一次报告\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/performance.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fscripts%2Fstats-batch%2Froute&page=%2Fapi%2Fscripts%2Fstats-batch%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscripts%2Fstats-batch%2Froute.ts&appDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Cxue%5Ctest-spec-pro%5Cxueran-juben-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();