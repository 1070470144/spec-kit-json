// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/analytics/scripts" | "/admin/analytics/users" | "/admin/comments" | "/admin/login" | "/admin/review" | "/admin/scripts" | "/admin/scripts/[id]" | "/admin/scripts/batch" | "/admin/scripts/series" | "/admin/settings/email" | "/admin/settings/portal" | "/admin/settings/sensitive-words" | "/admin/settings/system" | "/admin/storytellers" | "/admin/users" | "/admin/users/[id]" | "/admin/users/new" | "/forgot" | "/leaderboard" | "/login" | "/my/favorites" | "/my/uploads" | "/profile" | "/profile/storyteller" | "/rank" | "/register" | "/reset/[token]" | "/scripts" | "/scripts/[id]" | "/upload" | "/verify" | "/verify/[token]"
type AppRouteHandlerRoutes = "/api/admin/analytics/scripts" | "/api/admin/analytics/users" | "/api/admin/auth/login" | "/api/admin/auth/logout" | "/api/admin/auth/me" | "/api/admin/comments" | "/api/admin/review/approve-all" | "/api/admin/scripts" | "/api/admin/scripts/series" | "/api/admin/settings/email" | "/api/admin/settings/portal" | "/api/admin/settings/sensitive-words" | "/api/admin/settings/system" | "/api/admin/storytellers" | "/api/admin/storytellers/approve" | "/api/admin/storytellers/reject" | "/api/admin/users" | "/api/auth/email/resend" | "/api/auth/email/verify" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/password/forgot" | "/api/auth/password/reset" | "/api/auth/register" | "/api/files" | "/api/health" | "/api/leaderboard" | "/api/me" | "/api/me/favorites" | "/api/profile" | "/api/profile/avatar" | "/api/profile/password" | "/api/rankings" | "/api/scripts" | "/api/scripts/[id]" | "/api/scripts/[id]/comments" | "/api/scripts/[id]/delete" | "/api/scripts/[id]/download" | "/api/scripts/[id]/favorite" | "/api/scripts/[id]/images" | "/api/scripts/[id]/like" | "/api/scripts/[id]/review" | "/api/scripts/[id]/stats" | "/api/scripts/[id]/submit" | "/api/scripts/stats-batch" | "/api/site-config" | "/api/storyteller/apply"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/analytics/scripts": {}
  "/admin/analytics/users": {}
  "/admin/comments": {}
  "/admin/login": {}
  "/admin/review": {}
  "/admin/scripts": {}
  "/admin/scripts/[id]": { "id": string; }
  "/admin/scripts/batch": {}
  "/admin/scripts/series": {}
  "/admin/settings/email": {}
  "/admin/settings/portal": {}
  "/admin/settings/sensitive-words": {}
  "/admin/settings/system": {}
  "/admin/storytellers": {}
  "/admin/users": {}
  "/admin/users/[id]": { "id": string; }
  "/admin/users/new": {}
  "/api/admin/analytics/scripts": {}
  "/api/admin/analytics/users": {}
  "/api/admin/auth/login": {}
  "/api/admin/auth/logout": {}
  "/api/admin/auth/me": {}
  "/api/admin/comments": {}
  "/api/admin/review/approve-all": {}
  "/api/admin/scripts": {}
  "/api/admin/scripts/series": {}
  "/api/admin/settings/email": {}
  "/api/admin/settings/portal": {}
  "/api/admin/settings/sensitive-words": {}
  "/api/admin/settings/system": {}
  "/api/admin/storytellers": {}
  "/api/admin/storytellers/approve": {}
  "/api/admin/storytellers/reject": {}
  "/api/admin/users": {}
  "/api/auth/email/resend": {}
  "/api/auth/email/verify": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/password/forgot": {}
  "/api/auth/password/reset": {}
  "/api/auth/register": {}
  "/api/files": {}
  "/api/health": {}
  "/api/leaderboard": {}
  "/api/me": {}
  "/api/me/favorites": {}
  "/api/profile": {}
  "/api/profile/avatar": {}
  "/api/profile/password": {}
  "/api/rankings": {}
  "/api/scripts": {}
  "/api/scripts/[id]": { "id": string; }
  "/api/scripts/[id]/comments": { "id": string; }
  "/api/scripts/[id]/delete": { "id": string; }
  "/api/scripts/[id]/download": { "id": string; }
  "/api/scripts/[id]/favorite": { "id": string; }
  "/api/scripts/[id]/images": { "id": string; }
  "/api/scripts/[id]/like": { "id": string; }
  "/api/scripts/[id]/review": { "id": string; }
  "/api/scripts/[id]/stats": { "id": string; }
  "/api/scripts/[id]/submit": { "id": string; }
  "/api/scripts/stats-batch": {}
  "/api/site-config": {}
  "/api/storyteller/apply": {}
  "/forgot": {}
  "/leaderboard": {}
  "/login": {}
  "/my/favorites": {}
  "/my/uploads": {}
  "/profile": {}
  "/profile/storyteller": {}
  "/rank": {}
  "/register": {}
  "/reset/[token]": { "token": string; }
  "/scripts": {}
  "/scripts/[id]": { "id": string; }
  "/upload": {}
  "/verify": {}
  "/verify/[token]": { "token": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
