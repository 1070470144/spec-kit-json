// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/admin/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/login">> = Specific
  const handler = {} as typeof import("../../app/admin/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/review/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/review">> = Specific
  const handler = {} as typeof import("../../app/admin/review/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/scripts/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/scripts/[id]">> = Specific
  const handler = {} as typeof import("../../app/admin/scripts/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/scripts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/scripts">> = Specific
  const handler = {} as typeof import("../../app/admin/scripts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/scripts/series/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/scripts/series">> = Specific
  const handler = {} as typeof import("../../app/admin/scripts/series/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/settings/email/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings/email">> = Specific
  const handler = {} as typeof import("../../app/admin/settings/email/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/users/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/users/[id]">> = Specific
  const handler = {} as typeof import("../../app/admin/users/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/users/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/users/new">> = Specific
  const handler = {} as typeof import("../../app/admin/users/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/users">> = Specific
  const handler = {} as typeof import("../../app/admin/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/forgot/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forgot">> = Specific
  const handler = {} as typeof import("../../app/forgot/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/my/uploads/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/my/uploads">> = Specific
  const handler = {} as typeof import("../../app/my/uploads/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile">> = Specific
  const handler = {} as typeof import("../../app/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register">> = Specific
  const handler = {} as typeof import("../../app/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/reset/[token]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reset/[token]">> = Specific
  const handler = {} as typeof import("../../app/reset/[token]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/scripts/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/scripts/[id]">> = Specific
  const handler = {} as typeof import("../../app/scripts/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/scripts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/scripts">> = Specific
  const handler = {} as typeof import("../../app/scripts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/upload/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/upload">> = Specific
  const handler = {} as typeof import("../../app/upload/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/verify/[token]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/verify/[token]">> = Specific
  const handler = {} as typeof import("../../app/verify/[token]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/verify/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/verify">> = Specific
  const handler = {} as typeof import("../../app/verify/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auth/login">> = Specific
  const handler = {} as typeof import("../../app/api/admin/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auth/logout">> = Specific
  const handler = {} as typeof import("../../app/api/admin/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/auth/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/auth/me">> = Specific
  const handler = {} as typeof import("../../app/api/admin/auth/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/scripts/series/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/scripts/series">> = Specific
  const handler = {} as typeof import("../../app/api/admin/scripts/series/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/settings/email/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/settings/email">> = Specific
  const handler = {} as typeof import("../../app/api/admin/settings/email/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/users/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/users">> = Specific
  const handler = {} as typeof import("../../app/api/admin/users/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/email/resend/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/email/resend">> = Specific
  const handler = {} as typeof import("../../app/api/auth/email/resend/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/email/verify/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/email/verify">> = Specific
  const handler = {} as typeof import("../../app/api/auth/email/verify/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../app/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/logout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/logout">> = Specific
  const handler = {} as typeof import("../../app/api/auth/logout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/password/forgot/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/password/forgot">> = Specific
  const handler = {} as typeof import("../../app/api/auth/password/forgot/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/password/reset/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/password/reset">> = Specific
  const handler = {} as typeof import("../../app/api/auth/password/reset/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register">> = Specific
  const handler = {} as typeof import("../../app/api/auth/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/files/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/files">> = Specific
  const handler = {} as typeof import("../../app/api/files/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/me">> = Specific
  const handler = {} as typeof import("../../app/api/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/avatar/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile/avatar">> = Specific
  const handler = {} as typeof import("../../app/api/profile/avatar/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/password/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile/password">> = Specific
  const handler = {} as typeof import("../../app/api/profile/password/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/profile">> = Specific
  const handler = {} as typeof import("../../app/api/profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/scripts/[id]/download/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/scripts/[id]/download">> = Specific
  const handler = {} as typeof import("../../app/api/scripts/[id]/download/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/scripts/[id]/images/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/scripts/[id]/images">> = Specific
  const handler = {} as typeof import("../../app/api/scripts/[id]/images/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/scripts/[id]/review/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/scripts/[id]/review">> = Specific
  const handler = {} as typeof import("../../app/api/scripts/[id]/review/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/scripts/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/scripts/[id]">> = Specific
  const handler = {} as typeof import("../../app/api/scripts/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/scripts/[id]/submit/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/scripts/[id]/submit">> = Specific
  const handler = {} as typeof import("../../app/api/scripts/[id]/submit/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/scripts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/scripts">> = Specific
  const handler = {} as typeof import("../../app/api/scripts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/admin/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
